
* {

  box-sizing: border-box;
}

body, html, h1, p {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

button[name=dev] {
  position: fixed;
  top: 0;
  right: 10vw;
  font-size: 1.2rem;
}

$page_height: 90vh;
$page_margin: 10vh;

.pages {
  overflow-x: auto;
  display: flex;
  flex-direction: column;
  .page {
    height: 100vh;
    width: 100%;
    background: rgba(0,0,0,.1);
    display: flex;
    align-items: flex-start;
    justify-content: center;
    .page__content {
      height: $page_height;
      min-height: $page_height;
      max-height: $page_height;
      margin-top: 5vh;
      // width: calc(1.414141414141414141 * 90vh);
      width: calc(1.777777777777777777 * 90vh);
      background: rgba(255,255,255,1);
      box-shadow: 0 19px 38px rgba(0,0,0,0.15), 0 15px 12px rgba(0,0,0,0.11);
    }
  }
  &.horizontal {
    flex-direction: row;
    .page {
      padding: 0 5vh;
      min-width: inherit;
      flex: 1;
    }
    &.full_screen {
      .page {
        min-width: 100vw;
        flex: 1;
        .page__content {
          height: 96vh;
          width: calc(1.777777777777777777 * 97vh);
          margin-top: 2vh;
        }
      }
    }
  }
}


.grid-stack > .grid-stack-item {
  $grid_rows: 7;
  $grid_gaps: $grid_rows - 1;
  $gap_size: 4%;

  $item_height: (100 - ($grid_gaps * $gap_size)) / $grid_rows;
  @for $idx from 0 through $grid_rows {
    &[data-gs-height='#{$idx}'] { height: ($item_height * $idx) + ($gap_size * ($idx - 1)); }
    // Height doe snot factor gap in
    &[data-gs-y='#{$idx}']      { top: ($item_height * $idx) + ($gap_size * $idx); }
  }
}


.control_display {
  position: fixed;
  bottom: 0;
  left: 0;
  list-style-type: none;
  padding: 0;
  margin: 0;
  display: flex;
  button {
    &.active {
      border: 1px solid tomato;
    }
  }
}
